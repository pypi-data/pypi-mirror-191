Metadata-Version: 2.1
Name: csv2qif
Version: 0.1.1
Summary: Convert CSV file to QIF format.
Home-page: https://github.com/ebridges/csv2qif
License: MIT
Author: Edward Bridges
Requires-Python: >=3.11,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Home Automation
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Office/Business :: Financial :: Accounting
Classifier: Topic :: Utilities
Requires-Dist: docopt (>=0.6.2,<0.7.0)
Requires-Dist: python-dateutil (>=2.8.2,<3.0.0)
Project-URL: Repository, https://github.com/ebridges/csv2qif
Description-Content-Type: text/markdown

# csv2qif

## Usage

```
CSV to QIF.

Convert financial transactions in CSV format to QIF files.

Usage:
  csv2qif convert --account=<account-name> --account-type=<type> [--output-format=<fmt>] [--input-file=<path>] [--output-dir=<path>] [--verbose]
  csv2qif -h | --help
  csv2qif --version

Options:
  -h --help                 Show this screen.
  --version                 Show version.
  --account=<account-name>  Complete GnuCash account name.
  --account-type=<type>     QIF Account type <https://www.w3.org/2000/10/swap/pim/qif-doc/QIF-doc.htm> [Default: Bank]
  --output-format=<format>  Output format either 'json' or 'qif'. [Default: qif]
  --output-dir=<path>       Location to output file to. (Default: output to stdout)
  --input-file=<path>       Location of input file.
  --ignore-pending          Ignore pending transactions.
  --verbose                 Verbose logging output.
```

## License

[MIT](LICENSE.md)

