Metadata-Version: 2.1
Name: flowcept
Version: 0.0.133
Summary: A tool to intercept dataflows
Home-page: https://github.com/ORNL/flowcept
Author: Oak Ridge National Laboratory
Author-email: support@flowcept.org
License: MIT
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Natural Language :: English
Classifier: Topic :: System :: Distributed Computing
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML (==6.0)
Requires-Dist: redis (==4.4.2)
Requires-Dist: pika (==1.3.1)
Requires-Dist: mlflow-skinny (==2.1.1)
Requires-Dist: SQLAlchemy (==1.4.42)
Requires-Dist: alembic (==1.8.1)
Requires-Dist: watchdog (==2.2.1)
Requires-Dist: pandas (==1.5.1)
Requires-Dist: tensorboard (==2.11.0)
Requires-Dist: tensorflow (==2.11.0)
Requires-Dist: tbparse (==0.0.7)
Requires-Dist: pymongo (==4.3.3)
Requires-Dist: tomli (==1.1.0)
Requires-Dist: dask[distributed] (==2022.12.0)
Requires-Dist: flask (==2.2.2)
Requires-Dist: requests (==2.28.2)
Requires-Dist: flask-restful (==0.3.9)
Provides-Extra: dask
Requires-Dist: tomli (==1.1.0) ; extra == 'dask'
Requires-Dist: dask[distributed] (==2022.12.0) ; extra == 'dask'
Provides-Extra: full
Requires-Dist: PyYAML (==6.0) ; extra == 'full'
Requires-Dist: redis (==4.4.2) ; extra == 'full'
Requires-Dist: pika (==1.3.1) ; extra == 'full'
Requires-Dist: mlflow-skinny (==2.1.1) ; extra == 'full'
Requires-Dist: SQLAlchemy (==1.4.42) ; extra == 'full'
Requires-Dist: alembic (==1.8.1) ; extra == 'full'
Requires-Dist: watchdog (==2.2.1) ; extra == 'full'
Requires-Dist: pandas (==1.5.1) ; extra == 'full'
Requires-Dist: tensorboard (==2.11.0) ; extra == 'full'
Requires-Dist: tensorflow (==2.11.0) ; extra == 'full'
Requires-Dist: tbparse (==0.0.7) ; extra == 'full'
Requires-Dist: pymongo (==4.3.3) ; extra == 'full'
Requires-Dist: tomli (==1.1.0) ; extra == 'full'
Requires-Dist: dask[distributed] (==2022.12.0) ; extra == 'full'
Requires-Dist: flask (==2.2.2) ; extra == 'full'
Requires-Dist: requests (==2.28.2) ; extra == 'full'
Requires-Dist: flask-restful (==0.3.9) ; extra == 'full'
Provides-Extra: mlflow
Requires-Dist: mlflow-skinny (==2.1.1) ; extra == 'mlflow'
Requires-Dist: SQLAlchemy (==1.4.42) ; extra == 'mlflow'
Requires-Dist: alembic (==1.8.1) ; extra == 'mlflow'
Requires-Dist: watchdog (==2.2.1) ; extra == 'mlflow'
Provides-Extra: mongo
Requires-Dist: pymongo (==4.3.3) ; extra == 'mongo'
Provides-Extra: tensorboard
Requires-Dist: pandas (==1.5.1) ; extra == 'tensorboard'
Requires-Dist: tensorboard (==2.11.0) ; extra == 'tensorboard'
Requires-Dist: tensorflow (==2.11.0) ; extra == 'tensorboard'
Requires-Dist: tbparse (==0.0.7) ; extra == 'tensorboard'
Provides-Extra: webserver
Requires-Dist: flask (==2.2.2) ; extra == 'webserver'
Requires-Dist: requests (==2.28.2) ; extra == 'webserver'
Requires-Dist: flask-restful (==0.3.9) ; extra == 'webserver'
Provides-Extra: zambeze
Requires-Dist: pika (==1.3.1) ; extra == 'zambeze'

[![Build](https://github.com/ORNL/flowcept/actions/workflows/create-release-n-publish.yml/badge.svg)](https://github.com/ORNL/flowcept/actions/workflows/create-release-n-publish.yml)
[![PyPI](https://badge.fury.io/py/flowcept.svg)](https://pypi.org/project/flowcept)
[![Tests](https://github.com/ORNL/flowcept/actions/workflows/run-tests.yml/badge.svg)](https://github.com/ORNL/flowcept/actions/workflows/run-tests.yml)
[![Code Formatting](https://github.com/ORNL/flowcept/actions/workflows/code-formatting.yml/badge.svg)](https://github.com/ORNL/flowcept/actions/workflows/code-formatting.yml)
[![License: MIT](https://img.shields.io/github/license/ORNL/flowcept)](LICENSE)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

# Flowcept

## Development Environment

Read the [Contributing](CONTRIBUTING.md) file.

### Code Formatting

Flowcept code uses [Black](https://github.com/psf/black), a PEP 8 compliant code formatter, and 
[Flake8](https://github.com/pycqa/flake8), a code style guide enforcement tool. To install the
these tools you simply need to run the following:

```bash
$ pip install flake8 black
```

Before _every commit_, you should run the following:

```bash
$ black .
$ flake8 .
```

If errors are reported by `flake8`, please fix them before commiting the code.

### Running Tests

There are a few dependencies that need to be installed to run the pytest, if you installed the requirements.txt file then this should be covered as well.
```bash
$ pip install pytest
```

From the root directory using pytest we can run:

```bash
$ pytest
```

## Redis Server for the Interception Messages 
```bash
$ docker run -p 6379:6379  --name flowcept_redis -d redis
```

## Redis Server for the local cache 
```bash
$ docker run -p 60379:6379  --name local_interceptor_cache -d redis
```




## MongoDB
```
$ docker run --name mongo -d -p 27017:27017 mongo
```

# Plugins-specific info

You can run `pip install flowcept[plugin_name]` to install requirements for a specific plugin, instead of installing the
whole package.

### RabbitMQ for Zambeze plugin
```bash
$ docker run -it --rm --name rabbitmq -d -p 5672:5672 -p 15672:15672 rabbitmq:3.11-management
```

### Tensorboard

If you're on mac, `pip install` may not work out of the box because of Tensorflow library. 
You may need to `pip install tensorflow-macos` instead of the `tensorflow` lib available in the tensorboard-requirements.



# See also

- [Zambeze Repository](https://github.com/ORNL/zambeze)
