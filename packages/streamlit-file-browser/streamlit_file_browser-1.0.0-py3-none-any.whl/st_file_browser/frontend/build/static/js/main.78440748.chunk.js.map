{"version":3,"sources":["StFileBrowser.tsx","index.tsx"],"names":["StreamlitEventType","noticeStreamlit","event","Streamlit","setComponentValue","FileBrowserWrapper","props","args","folderOpenHandler","opts","ajustHeight","folderCloseHandler","fileSelectedHandler","file","files","find","relative_path","key","type","SELECT_FILE","target","downlandHandler","keys","filter","includes","length","DOWNLOAD","convertFiles","map","modified","time","update_time","Date","size","noop","render","showActionBar","canFilter","detailRenderer","icons","Icons","FontAwesome","onFolderOpen","onFolderClose","onSelect","onDownloadFile","revoke_step","root","document","getElementById","height","Math","min","clientHeight","scrollHeight","offsetHeight","setFrameHeight","setTimeout","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","StFileBrowser"],"mappings":"6IAuBKA,E,qGAAkB,SAAlBA,KAAkB,0BAAlBA,EAAkB,8BAAlBA,EAAkB,oBAAlBA,EAAkB,0BAAlBA,EAAkB,8BAAlBA,EAAkB,8BAAlBA,EAAkB,0BAAlBA,EAAkB,0BAAlBA,EAAkB,8BAAlBA,EAAkB,sBAAlBA,EAAkB,2BAAlBA,MAAkB,KA4BvB,IAAMC,EAAkB,SAACC,GAAqB,OAAKC,IAAUC,kBAAkBF,IAIzEG,EAAkB,kDAGtB,WAAYC,GAAwB,IAAD,EAEX,OAFW,qBACjC,cAAMA,IAHAC,UAAI,IAwBZC,kBAAoB,SAACC,GAAuB,OAAK,EAAKC,eAAa,EACnEC,mBAAqB,SAACF,GAAuB,OAAK,EAAKC,eAAa,EAEpEE,oBAAsB,SAACH,GACrB,IAAMI,EAAO,EAAKN,KAAKO,MAAMC,MAAK,SAAAF,GAAI,OAAIA,EAAKG,gBAAkBP,EAAKQ,OACtEJ,GAAQZ,EAAgB,CAAEiB,KAAMlB,EAAmBmB,YAAaC,OAAQP,KACzE,EAEDQ,gBAAkB,SAACC,GACjB,IAAMR,EAAQ,EAAKP,KAAKO,MAAMS,QAAO,SAAAV,GAAI,OAAIS,EAAKE,SAASX,EAAKG,kBAChEF,EAAMW,QAAUxB,EAAgB,CAAEiB,KAAMlB,EAAmB0B,SAAUN,OAAQN,KAC9E,EAEDa,aAAe,SAACb,GAAa,OAC3BA,EAAMc,KAAI,SAAAf,GAAI,MACZ,CACEI,IAAKJ,EAAKG,cACVa,UA5CaC,EA4CSjB,EAAKkB,aA5CK,IAAIC,KAASF,GA6C7CG,KAAMpB,EAAKoB,MA7CC,IAACH,MAgDlB,EAEDI,KAAO,kBAAM,sCAAK,EACXC,OAAS,WACd,OACE,6BACE,kBAAC,IAAW,iBACN,EAAK5B,KAAI,CACb6B,eAAa,EACbC,WAAW,EACXC,eAAgB,EAAKJ,KACrBK,MAAOC,QAAMC,YAAY,GACzB3B,MAAO,EAAKa,aAAa,EAAKpB,KAAKO,OACnC4B,aAAc,EAAKlC,kBACnBmC,cAAe,EAAKhC,mBACpBiC,SAAU,EAAKhC,oBACfiC,eAAgB,EAAKxB,qBAzD3B,EAAKd,KAAOD,EAAMC,KAAI,EAkBvB,OAjBA,wCAED,SAAYuC,GACV,IAAMC,EAAOC,SAASC,eAAe,QACrC,GAAIF,EAAM,CACR,IAAMG,EAASC,KAAKC,IAAIL,EAAKM,aAAcN,EAAKO,aAAcP,EAAKQ,cACnEpD,IAAUqD,eAAeN,GAAUJ,GAA4B,IAC/DW,WAAWtD,IAAUqD,eAAgB,MAExC,+BAED,WACEE,KAAKhD,gBACN,gCAED,WACEgD,KAAKhD,kBACN,EAvBqB,CAASiD,KAqElBC,cAAwBvD,GCxHvCwD,IAAS1B,OACP,kBAAC,IAAM2B,WAAU,KACf,kBAACC,EAAa,OAEhBf,SAASC,eAAe,U","file":"static/js/main.78440748.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport FileBrowser, { Icons, FileBrowserFile, FileBrowserFolder } from 'react-keyed-file-browser'\nimport 'react-keyed-file-browser/dist/react-keyed-file-browser.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\ninterface File {\n  name: string;\n  absolute_path: string;\n  relative_path: string;\n  is_dir: string;\n  size: number;\n  create_time: number;\n  update_time: number;\n  access_time: number;\n  children: File[];\n}\n\nenum StreamlitEventType {\n  SELECT_FILE = \"SELECT_FILE\",\n  SELECT_FOLDER = \"SELECT_FOLDER\",\n  DOWNLOAD = \"DOWNLOAD\",\n  DELETE_FILE = \"DELETE_FILE\",\n  DELETE_FOLDER = \"DELETE_FOLDER\",\n  RENAME_FOLDER = \"RENAME_FOLDER\",\n  RENAME_FILE = \"RENAME_FILE\",\n  CREATE_FILE = \"CREATE_FILE\",\n  CREATE_FOLDER = \"CREATE_FOLDER\",\n  MOVE_FILE = \"MOVE_FILE\",\n  MOVE_FOLDER = \"MOVE_FOLDER\",\n}\n\ninterface StreamlitEvent {\n  type: StreamlitEventType;\n  target: File | File[];\n}\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\ninterface IArgs {\n  files: File[]\n}\n\nconst noticeStreamlit = (event: StreamlitEvent) => Streamlit.setComponentValue(event)\n\nconst getTimeDiff = (time: number) => (+new Date() - time);\n\nclass FileBrowserWrapper extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    const root = document.getElementById('root');\n    if (root) {\n      const height = Math.min(root.clientHeight, root.scrollHeight, root.offsetHeight);\n      Streamlit.setFrameHeight(height - (revoke_step ? revoke_step : 0));\n      setTimeout(Streamlit.setFrameHeight, 1);\n    }\n  }\n\n  componentDidMount() {\n    this.ajustHeight();\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight();\n  }\n\n  folderOpenHandler = (opts: FileBrowserFolder) => this.ajustHeight();\n  folderCloseHandler = (opts: FileBrowserFolder) => this.ajustHeight();\n\n  fileSelectedHandler = (opts: FileBrowserFile) => {\n    const file = this.args.files.find(file => file.relative_path === opts.key)\n    file && noticeStreamlit({ type: StreamlitEventType.SELECT_FILE, target: file });\n  }\n\n  downlandHandler = (keys: string[]) => {\n    const files = this.args.files.filter(file => keys.includes(file.relative_path))\n    files.length && noticeStreamlit({ type: StreamlitEventType.DOWNLOAD, target: files });\n  }\n\n  convertFiles = (files: File[]): FileBrowserFile[] => (\n    files.map(file => (\n      {\n        key: file.relative_path,\n        modified: getTimeDiff(file.update_time),\n        size: file.size,\n      }\n    ))\n  )\n\n  noop = () => <></>\n  public render = () => {\n    return (\n      <div>\n        <FileBrowser\n          {...this.args}\n          showActionBar\n          canFilter={false}\n          detailRenderer={this.noop}\n          icons={Icons.FontAwesome(4)}\n          files={this.convertFiles(this.args.files)}\n          onFolderOpen={this.folderOpenHandler}\n          onFolderClose={this.folderCloseHandler}\n          onSelect={this.fileSelectedHandler}\n          onDownloadFile={this.downlandHandler}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(FileBrowserWrapper)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StFileBrowser from \"./StFileBrowser\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StFileBrowser />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}