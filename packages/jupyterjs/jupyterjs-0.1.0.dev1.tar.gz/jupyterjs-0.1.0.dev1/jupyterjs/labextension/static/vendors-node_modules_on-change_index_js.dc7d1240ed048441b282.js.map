{"version":3,"file":"vendors-node_modules_on-change_index_js.dc7d1240ed048441b282.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACuD;AACyC;AAC/D;AACS;AACI;AACI;AACI;AACnB;AACuB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA,QAAQ,4CAA4C;AACpD,mBAAmB,qDAAK;AACxB;AACA,wBAAwB,uEAAU;;AAElC;AACA;AACA;AACA,wBAAwB,2DAAW;;AAEnC;AACA;AACA,IAAI,mEAAc;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,YAAY,2DAAW;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG,kFAA8B;AACjC;AACA,qBAAqB,uFAA0B;AAC/C,MAAM,mEAAc;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,2DAAW;AAC1C;;AAEA;AACA;AACA,OAAO,6DAAQ;AACf,iDAAiD,qDAAM;AACvD;AACA;;AAEA;AACA,kBAAkB,0DAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,+EAA2B;AAC5C;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,qFAAwB;AAC/B;AACA,oBAAoB,4DAAY;AAChC,4BAA4B,uFAA0B;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,qFAAwB;AAChC;AACA,kBAAkB,2DAAW;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAY;AACpB;AACA;AACA,QAAQ,yDAAS;AACjB;;AAEA,kBAAkB,wDAAQ;AAC1B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,QAAQ,+DAAU;AAClB;AACA,YAAY,iEAAY;AACxB;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,qDAAM;AACjD,sCAAsC,0DAAW;;AAEjD,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;ACrPK;;AAE7B;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,oDAAQ;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvJO;AACA;AACA;;;;;;;;;;;;;;;;ACF+B;;AAEvB;AACf;AACA,+BAA+B,yDAAQ;AACvC;AACA;AACA;;;;;;;;;;;;;;;ACPA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;ACAtB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;ACXe;AACf;AACA;;;;;;;;;;;;;;;ACFe;AACf;AACA;;;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","sources":["webpack://jupyter-js-widget/./node_modules/on-change/index.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/cache.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/constants.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/ignore-property.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/is-array.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/is-builtin.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/is-iterator.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/is-object.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/is-symbol.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/path.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-array.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-date.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-map.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-object.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-set.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-weakmap.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/clone/clone-weakset.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/diff/is-diff-arrays.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/diff/is-diff-certain.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/diff/is-diff-maps.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/diff/is-diff-sets.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/methods/array.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/methods/map.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/methods/object.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/methods/set.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/smart-clone/smart-clone.js","webpack://jupyter-js-widget/./node_modules/on-change/lib/wrap-iterator.js"],"sourcesContent":["/* eslint-disable unicorn/prefer-spread */\nimport {TARGET, UNSUBSCRIBE} from './lib/constants.js';\nimport {isBuiltinWithMutableMethods, isBuiltinWithoutMutableMethods} from './lib/is-builtin.js';\nimport path from './lib/path.js';\nimport isSymbol from './lib/is-symbol.js';\nimport isIterator from './lib/is-iterator.js';\nimport wrapIterator from './lib/wrap-iterator.js';\nimport ignoreProperty from './lib/ignore-property.js';\nimport Cache from './lib/cache.js';\nimport SmartClone from './lib/smart-clone/smart-clone.js';\n\nconst defaultOptions = {\n\tequals: Object.is,\n\tisShallow: false,\n\tpathAsArray: false,\n\tignoreSymbols: false,\n\tignoreUnderscores: false,\n\tignoreDetached: false,\n\tdetails: false,\n};\n\nconst onChange = (object, onChange, options = {}) => {\n\toptions = {\n\t\t...defaultOptions,\n\t\t...options,\n\t};\n\n\tconst proxyTarget = Symbol('ProxyTarget');\n\tconst {equals, isShallow, ignoreDetached, details} = options;\n\tconst cache = new Cache(equals);\n\tconst hasOnValidate = typeof options.onValidate === 'function';\n\tconst smartClone = new SmartClone(hasOnValidate);\n\n\t// eslint-disable-next-line max-params\n\tconst validate = (target, property, value, previous, applyData) => !hasOnValidate\n\t\t|| smartClone.isCloning\n\t\t|| options.onValidate(path.concat(cache.getPath(target), property), value, previous, applyData) === true;\n\n\tconst handleChangeOnTarget = (target, property, value, previous) => {\n\t\tif (\n\t\t\t!ignoreProperty(cache, options, property)\n\t\t\t&& !(ignoreDetached && cache.isDetached(target, object))\n\t\t) {\n\t\t\thandleChange(cache.getPath(target), property, value, previous);\n\t\t}\n\t};\n\n\t// eslint-disable-next-line max-params\n\tconst handleChange = (changePath, property, value, previous, applyData) => {\n\t\tif (smartClone.isCloning) {\n\t\t\tsmartClone.update(changePath, property, previous);\n\t\t} else {\n\t\t\tonChange(path.concat(changePath, property), value, previous, applyData);\n\t\t}\n\t};\n\n\tconst getProxyTarget = value => value\n\t\t? (value[proxyTarget] || value)\n\t\t: value;\n\n\tconst prepareValue = (value, target, property, basePath) => {\n\t\tif (\n\t\t\tisBuiltinWithoutMutableMethods(value)\n\t\t\t|| property === 'constructor'\n\t\t\t|| (isShallow && !SmartClone.isHandledMethod(target, property))\n\t\t\t|| ignoreProperty(cache, options, property)\n\t\t\t|| cache.isGetInvariant(target, property)\n\t\t\t|| (ignoreDetached && cache.isDetached(target, object))\n\t\t) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (basePath === undefined) {\n\t\t\tbasePath = cache.getPath(target);\n\t\t}\n\n\t\treturn cache.getProxy(value, path.concat(basePath, property), handler, proxyTarget);\n\t};\n\n\tconst handler = {\n\t\tget(target, property, receiver) {\n\t\t\tif (isSymbol(property)) {\n\t\t\t\tif (property === proxyTarget || property === TARGET) {\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tproperty === UNSUBSCRIBE\n\t\t\t\t\t&& !cache.isUnsubscribed\n\t\t\t\t\t&& cache.getPath(target).length === 0\n\t\t\t\t) {\n\t\t\t\t\tcache.unsubscribe();\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst value = isBuiltinWithMutableMethods(target)\n\t\t\t\t? Reflect.get(target, property)\n\t\t\t\t: Reflect.get(target, property, receiver);\n\n\t\t\treturn prepareValue(value, target, property);\n\t\t},\n\n\t\tset(target, property, value, receiver) {\n\t\t\tvalue = getProxyTarget(value);\n\n\t\t\tconst reflectTarget = target[proxyTarget] || target;\n\t\t\tconst previous = reflectTarget[property];\n\n\t\t\tif (equals(previous, value) && property in target) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst isValid = validate(target, property, value, previous);\n\n\t\t\tif (\n\t\t\t\tisValid\n\t\t\t\t&& cache.setProperty(reflectTarget, property, value, receiver, previous)\n\t\t\t) {\n\t\t\t\thandleChangeOnTarget(target, property, target[property], previous);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn !isValid;\n\t\t},\n\n\t\tdefineProperty(target, property, descriptor) {\n\t\t\tif (!cache.isSameDescriptor(descriptor, target, property)) {\n\t\t\t\tconst previous = target[property];\n\n\t\t\t\tif (\n\t\t\t\t\tvalidate(target, property, descriptor.value, previous)\n\t\t\t\t\t&& cache.defineProperty(target, property, descriptor, previous)\n\t\t\t\t) {\n\t\t\t\t\thandleChangeOnTarget(target, property, descriptor.value, previous);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, property) {\n\t\t\tif (!Reflect.has(target, property)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst previous = Reflect.get(target, property);\n\t\t\tconst isValid = validate(target, property, undefined, previous);\n\n\t\t\tif (\n\t\t\t\tisValid\n\t\t\t\t&& cache.deleteProperty(target, property, previous)\n\t\t\t) {\n\t\t\t\thandleChangeOnTarget(target, property, undefined, previous);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn !isValid;\n\t\t},\n\n\t\tapply(target, thisArg, argumentsList) {\n\t\t\tconst thisProxyTarget = thisArg[proxyTarget] || thisArg;\n\n\t\t\tif (cache.isUnsubscribed) {\n\t\t\t\treturn Reflect.apply(target, thisProxyTarget, argumentsList);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t(details === false\n\t\t\t\t\t|| (details !== true && !details.includes(target.name)))\n\t\t\t\t&& SmartClone.isHandledType(thisProxyTarget)\n\t\t\t) {\n\t\t\t\tlet applyPath = path.initial(cache.getPath(target));\n\t\t\t\tconst isHandledMethod = SmartClone.isHandledMethod(thisProxyTarget, target.name);\n\n\t\t\t\tsmartClone.start(thisProxyTarget, applyPath, argumentsList);\n\n\t\t\t\tlet result = Reflect.apply(\n\t\t\t\t\ttarget,\n\t\t\t\t\tsmartClone.preferredThisArg(target, thisArg, thisProxyTarget),\n\t\t\t\t\tisHandledMethod\n\t\t\t\t\t\t? argumentsList.map(argument => getProxyTarget(argument))\n\t\t\t\t\t\t: argumentsList,\n\t\t\t\t);\n\n\t\t\t\tconst isChanged = smartClone.isChanged(thisProxyTarget, equals);\n\t\t\t\tconst previous = smartClone.stop();\n\n\t\t\t\tif (SmartClone.isHandledType(result) && isHandledMethod) {\n\t\t\t\t\tif (thisArg instanceof Map && target.name === 'get') {\n\t\t\t\t\t\tapplyPath = path.concat(applyPath, argumentsList[0]);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = cache.getProxy(result, applyPath, handler);\n\t\t\t\t}\n\n\t\t\t\tif (isChanged) {\n\t\t\t\t\tconst applyData = {\n\t\t\t\t\t\tname: target.name,\n\t\t\t\t\t\targs: argumentsList,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t};\n\t\t\t\t\tconst changePath = smartClone.isCloning\n\t\t\t\t\t\t? path.initial(applyPath)\n\t\t\t\t\t\t: applyPath;\n\t\t\t\t\tconst property = smartClone.isCloning\n\t\t\t\t\t\t? path.last(applyPath)\n\t\t\t\t\t\t: '';\n\n\t\t\t\t\tif (validate(path.get(object, changePath), property, thisProxyTarget, previous, applyData)) {\n\t\t\t\t\t\thandleChange(changePath, property, thisProxyTarget, previous, applyData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsmartClone.undo(thisProxyTarget);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(thisArg instanceof Map || thisArg instanceof Set)\n\t\t\t\t\t&& isIterator(result)\n\t\t\t\t) {\n\t\t\t\t\treturn wrapIterator(result, target, thisArg, applyPath, prepareValue);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn Reflect.apply(target, thisArg, argumentsList);\n\t\t},\n\t};\n\n\tconst proxy = cache.getProxy(object, options.pathAsArray ? [] : '', handler);\n\tonChange = onChange.bind(proxy);\n\n\tif (hasOnValidate) {\n\t\toptions.onValidate = options.onValidate.bind(proxy);\n\t}\n\n\treturn proxy;\n};\n\nonChange.target = proxy => (proxy && proxy[TARGET]) || proxy;\nonChange.unsubscribe = proxy => proxy[UNSUBSCRIBE] || proxy;\n\nexport default onChange;\n","import path from './path.js';\n\n/**\n@class Cache\n@private\n*/\nexport default class Cache {\n\tconstructor(equals) {\n\t\tthis._equals = equals;\n\t\tthis._proxyCache = new WeakMap();\n\t\tthis._pathCache = new WeakMap();\n\t\tthis.isUnsubscribed = false;\n\t}\n\n\t_getDescriptorCache() {\n\t\tif (this._descriptorCache === undefined) {\n\t\t\tthis._descriptorCache = new WeakMap();\n\t\t}\n\n\t\treturn this._descriptorCache;\n\t}\n\n\t_getProperties(target) {\n\t\tconst descriptorCache = this._getDescriptorCache();\n\t\tlet properties = descriptorCache.get(target);\n\n\t\tif (properties === undefined) {\n\t\t\tproperties = {};\n\t\t\tdescriptorCache.set(target, properties);\n\t\t}\n\n\t\treturn properties;\n\t}\n\n\t_getOwnPropertyDescriptor(target, property) {\n\t\tif (this.isUnsubscribed) {\n\t\t\treturn Reflect.getOwnPropertyDescriptor(target, property);\n\t\t}\n\n\t\tconst properties = this._getProperties(target);\n\t\tlet descriptor = properties[property];\n\n\t\tif (descriptor === undefined) {\n\t\t\tdescriptor = Reflect.getOwnPropertyDescriptor(target, property);\n\t\t\tproperties[property] = descriptor;\n\t\t}\n\n\t\treturn descriptor;\n\t}\n\n\tgetProxy(target, path, handler, proxyTarget) {\n\t\tif (this.isUnsubscribed) {\n\t\t\treturn target;\n\t\t}\n\n\t\tconst reflectTarget = target[proxyTarget];\n\t\tconst source = reflectTarget || target;\n\n\t\tthis._pathCache.set(source, path);\n\n\t\tlet proxy = this._proxyCache.get(source);\n\n\t\tif (proxy === undefined) {\n\t\t\tproxy = reflectTarget === undefined\n\t\t\t\t? new Proxy(target, handler)\n\t\t\t\t: target;\n\n\t\t\tthis._proxyCache.set(source, proxy);\n\t\t}\n\n\t\treturn proxy;\n\t}\n\n\tgetPath(target) {\n\t\treturn this.isUnsubscribed ? undefined : this._pathCache.get(target);\n\t}\n\n\tisDetached(target, object) {\n\t\treturn !Object.is(target, path.get(object, this.getPath(target)));\n\t}\n\n\tdefineProperty(target, property, descriptor) {\n\t\tif (!Reflect.defineProperty(target, property, descriptor)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.isUnsubscribed) {\n\t\t\tthis._getProperties(target)[property] = descriptor;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetProperty(target, property, value, receiver, previous) { // eslint-disable-line max-params\n\t\tif (!this._equals(previous, value) || !(property in target)) {\n\t\t\tconst descriptor = this._getOwnPropertyDescriptor(target, property);\n\n\t\t\tif (descriptor !== undefined && 'set' in descriptor) {\n\t\t\t\treturn Reflect.set(target, property, value, receiver);\n\t\t\t}\n\n\t\t\treturn Reflect.set(target, property, value);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdeleteProperty(target, property, previous) {\n\t\tif (Reflect.deleteProperty(target, property)) {\n\t\t\tif (!this.isUnsubscribed) {\n\t\t\t\tconst properties = this._getDescriptorCache().get(target);\n\n\t\t\t\tif (properties) {\n\t\t\t\t\tdelete properties[property];\n\t\t\t\t\tthis._pathCache.delete(previous);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisSameDescriptor(a, target, property) {\n\t\tconst b = this._getOwnPropertyDescriptor(target, property);\n\n\t\treturn a !== undefined\n\t\t\t&& b !== undefined\n\t\t\t&& Object.is(a.value, b.value)\n\t\t\t&& (a.writable || false) === (b.writable || false)\n\t\t\t&& (a.enumerable || false) === (b.enumerable || false)\n\t\t\t&& (a.configurable || false) === (b.configurable || false)\n\t\t\t&& a.get === b.get\n\t\t\t&& a.set === b.set;\n\t}\n\n\tisGetInvariant(target, property) {\n\t\tconst descriptor = this._getOwnPropertyDescriptor(target, property);\n\n\t\treturn descriptor !== undefined\n\t\t\t&& descriptor.configurable !== true\n\t\t\t&& descriptor.writable !== true;\n\t}\n\n\tunsubscribe() {\n\t\tthis._descriptorCache = null;\n\t\tthis._pathCache = null;\n\t\tthis._proxyCache = null;\n\t\tthis.isUnsubscribed = true;\n\t}\n}\n","export const PATH_SEPARATOR = '.';\nexport const TARGET = Symbol('target');\nexport const UNSUBSCRIBE = Symbol('unsubscribe');\n","import isSymbol from './is-symbol.js';\n\nexport default function ignoreProperty(cache, options, property) {\n\treturn cache.isUnsubscribed\n\t\t|| (options.ignoreSymbols && isSymbol(property))\n\t\t|| (options.ignoreUnderscores && property.charAt(0) === '_')\n\t\t|| ('ignoreKeys' in options && options.ignoreKeys.includes(property));\n}\n","export default Array.isArray;\n","export function isBuiltinWithMutableMethods(value) {\n\treturn value instanceof Date\n\t\t|| value instanceof Set\n\t\t|| value instanceof Map\n\t\t|| value instanceof WeakSet\n\t\t|| value instanceof WeakMap\n\t\t|| ArrayBuffer.isView(value);\n}\n\nexport function isBuiltinWithoutMutableMethods(value) {\n\treturn (typeof value === 'object' ? value === null : typeof value !== 'function') || value instanceof RegExp;\n}\n","export default function isIterator(value) {\n\treturn typeof value === 'object' && typeof value.next === 'function';\n}\n","export default function isObject(value) {\n\treturn toString.call(value) === '[object Object]';\n}\n","export default function isSymbol(value) {\n\treturn typeof value === 'symbol';\n}\n","import {PATH_SEPARATOR} from './constants.js';\nimport isArray from './is-array.js';\nimport isSymbol from './is-symbol.js';\n\nconst path = {\n\tafter: (path, subPath) => {\n\t\tif (isArray(path)) {\n\t\t\treturn path.slice(subPath.length);\n\t\t}\n\n\t\tif (subPath === '') {\n\t\t\treturn path;\n\t\t}\n\n\t\treturn path.slice(subPath.length + 1);\n\t},\n\tconcat: (path, key) => {\n\t\tif (isArray(path)) {\n\t\t\tpath = [...path];\n\n\t\t\tif (key) {\n\t\t\t\tpath.push(key);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\tif (key && key.toString !== undefined) {\n\t\t\tif (path !== '') {\n\t\t\t\tpath += PATH_SEPARATOR;\n\t\t\t}\n\n\t\t\tif (isSymbol(key)) {\n\t\t\t\treturn path + key.toString();\n\t\t\t}\n\n\t\t\treturn path + key;\n\t\t}\n\n\t\treturn path;\n\t},\n\tinitial: path => {\n\t\tif (isArray(path)) {\n\t\t\treturn path.slice(0, -1);\n\t\t}\n\n\t\tif (path === '') {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst index = path.lastIndexOf(PATH_SEPARATOR);\n\n\t\tif (index === -1) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn path.slice(0, index);\n\t},\n\tlast: path => {\n\t\tif (isArray(path)) {\n\t\t\treturn path[path.length - 1] || '';\n\t\t}\n\n\t\tif (path === '') {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst index = path.lastIndexOf(PATH_SEPARATOR);\n\n\t\tif (index === -1) {\n\t\t\treturn path;\n\t\t}\n\n\t\treturn path.slice(index + 1);\n\t},\n\twalk: (path, callback) => {\n\t\tif (isArray(path)) {\n\t\t\tfor (const key of path) {\n\t\t\t\tcallback(key);\n\t\t\t}\n\t\t} else if (path !== '') {\n\t\t\tlet position = 0;\n\t\t\tlet index = path.indexOf(PATH_SEPARATOR);\n\n\t\t\tif (index === -1) {\n\t\t\t\tcallback(path);\n\t\t\t} else {\n\t\t\t\twhile (position < path.length) {\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tindex = path.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(path.slice(position, index));\n\n\t\t\t\t\tposition = index + 1;\n\t\t\t\t\tindex = path.indexOf(PATH_SEPARATOR, position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tget(object, path) {\n\t\tthis.walk(path, key => {\n\t\t\tif (object) {\n\t\t\t\tobject = object[key];\n\t\t\t}\n\t\t});\n\n\t\treturn object;\n\t},\n};\n\nexport default path;\n","import {HANDLED_ARRAY_METHODS} from '../methods/array.js';\nimport CloneObject from './clone-object.js';\n\nexport default class CloneArray extends CloneObject {\n\tstatic isHandledMethod(name) {\n\t\treturn HANDLED_ARRAY_METHODS.has(name);\n\t}\n}\n","import CloneObject from './clone-object.js';\n\nexport default class CloneDate extends CloneObject {\n\tundo(object) {\n\t\tobject.setTime(this.clone.getTime());\n\t}\n\n\tisChanged(value, equals) {\n\t\treturn !equals(this.clone.valueOf(), value.valueOf());\n\t}\n}\n","import {HANDLED_MAP_METHODS} from '../methods/map.js';\nimport CloneObject from './clone-object.js';\n\nexport default class CloneMap extends CloneObject {\n\tstatic isHandledMethod(name) {\n\t\treturn HANDLED_MAP_METHODS.has(name);\n\t}\n\n\tundo(object) {\n\t\tfor (const [key, value] of this.clone.entries()) {\n\t\t\tobject.set(key, value);\n\t\t}\n\n\t\tfor (const key of object.keys()) {\n\t\t\tif (!this.clone.has(key)) {\n\t\t\t\tobject.delete(key);\n\t\t\t}\n\t\t}\n\t}\n}\n","import path from '../../path.js';\nimport isArray from '../../is-array.js';\nimport isObject from '../../is-object.js';\nimport {MUTABLE_ARRAY_METHODS} from '../methods/array.js';\nimport {MUTABLE_SET_METHODS} from '../methods/set.js';\nimport {MUTABLE_MAP_METHODS} from '../methods/map.js';\nimport {IMMUTABLE_OBJECT_METHODS} from '../methods/object.js';\n\nexport default class CloneObject {\n\tconstructor(value, path, argumentsList, hasOnValidate) {\n\t\tthis._path = path;\n\t\tthis._isChanged = false;\n\t\tthis._clonedCache = new Set();\n\t\tthis._hasOnValidate = hasOnValidate;\n\t\tthis._changes = hasOnValidate ? [] : null;\n\n\t\tthis.clone = path === undefined ? value : this._shallowClone(value);\n\t}\n\n\tstatic isHandledMethod(name) {\n\t\treturn IMMUTABLE_OBJECT_METHODS.has(name);\n\t}\n\n\t_shallowClone(value) {\n\t\tlet clone = value;\n\n\t\tif (isObject(value)) {\n\t\t\tclone = {...value};\n\t\t} else if (isArray(value) || ArrayBuffer.isView(value)) {\n\t\t\tclone = [...value];\n\t\t} else if (value instanceof Date) {\n\t\t\tclone = new Date(value);\n\t\t} else if (value instanceof Set) {\n\t\t\tclone = new Set([...value].map(item => this._shallowClone(item)));\n\t\t} else if (value instanceof Map) {\n\t\t\tclone = new Map();\n\n\t\t\tfor (const [key, item] of value.entries()) {\n\t\t\t\tclone.set(key, this._shallowClone(item));\n\t\t\t}\n\t\t}\n\n\t\tthis._clonedCache.add(clone);\n\n\t\treturn clone;\n\t}\n\n\tpreferredThisArg(isHandledMethod, name, thisArg, thisProxyTarget) {\n\t\tif (isHandledMethod) {\n\t\t\tif (isArray(thisProxyTarget)) {\n\t\t\t\tthis._onIsChanged = MUTABLE_ARRAY_METHODS[name];\n\t\t\t} else if (thisProxyTarget instanceof Set) {\n\t\t\t\tthis._onIsChanged = MUTABLE_SET_METHODS[name];\n\t\t\t} else if (thisProxyTarget instanceof Map) {\n\t\t\t\tthis._onIsChanged = MUTABLE_MAP_METHODS[name];\n\t\t\t}\n\n\t\t\treturn thisProxyTarget;\n\t\t}\n\n\t\treturn thisArg;\n\t}\n\n\tupdate(fullPath, property, value) {\n\t\tconst changePath = path.after(fullPath, this._path);\n\n\t\tif (property !== 'length') {\n\t\t\tlet object = this.clone;\n\n\t\t\tpath.walk(changePath, key => {\n\t\t\t\tif (object && object[key]) {\n\t\t\t\t\tif (!this._clonedCache.has(object[key])) {\n\t\t\t\t\t\tobject[key] = this._shallowClone(object[key]);\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = object[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this._hasOnValidate) {\n\t\t\t\tthis._changes.push({\n\t\t\t\t\tpath: changePath,\n\t\t\t\t\tproperty,\n\t\t\t\t\tprevious: value,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (object && object[property]) {\n\t\t\t\tobject[property] = value;\n\t\t\t}\n\t\t}\n\n\t\tthis._isChanged = true;\n\t}\n\n\tundo(object) {\n\t\tlet change;\n\n\t\tfor (let index = this._changes.length - 1; index !== -1; index--) {\n\t\t\tchange = this._changes[index];\n\n\t\t\tpath.get(object, change.path)[change.property] = change.previous;\n\t\t}\n\t}\n\n\tisChanged(value) {\n\t\treturn this._onIsChanged === undefined\n\t\t\t? this._isChanged\n\t\t\t: this._onIsChanged(this.clone, value);\n\t}\n}\n","import {HANDLED_SET_METHODS} from '../methods/set.js';\nimport CloneObject from './clone-object.js';\n\nexport default class CloneSet extends CloneObject {\n\tstatic isHandledMethod(name) {\n\t\treturn HANDLED_SET_METHODS.has(name);\n\t}\n\n\tundo(object) {\n\t\tfor (const value of this.clone) {\n\t\t\tobject.add(value);\n\t\t}\n\n\t\tfor (const value of object) {\n\t\t\tif (!this.clone.has(value)) {\n\t\t\t\tobject.delete(value);\n\t\t\t}\n\t\t}\n\t}\n}\n\n","import CloneObject from './clone-object.js';\n\nexport default class CloneWeakMap extends CloneObject {\n\tconstructor(value, path, argumentsList, hasOnValidate) {\n\t\tsuper(undefined, path, argumentsList, hasOnValidate);\n\n\t\tthis._weakKey = argumentsList[0];\n\t\tthis._weakHas = value.has(this._weakKey);\n\t\tthis._weakValue = value.get(this._weakKey);\n\t}\n\n\tisChanged(value) {\n\t\treturn this._weakValue !== value.get(this._weakKey);\n\t}\n\n\tundo(object) {\n\t\tconst weakHas = object.has(this._weakKey);\n\n\t\tif (this._weakHas && !weakHas) {\n\t\t\tobject.set(this._weakKey, this._weakValue);\n\t\t} else if (!this._weakHas && weakHas) {\n\t\t\tobject.delete(this._weakKey);\n\t\t} else if (this._weakValue !== object.get(this._weakKey)) {\n\t\t\tobject.set(this._weakKey, this._weakValue);\n\t\t}\n\t}\n}\n","import CloneObject from './clone-object.js';\n\nexport default class CloneWeakSet extends CloneObject {\n\tconstructor(value, path, argumentsList, hasOnValidate) {\n\t\tsuper(undefined, path, argumentsList, hasOnValidate);\n\n\t\tthis._arg1 = argumentsList[0];\n\t\tthis._weakValue = value.has(this._arg1);\n\t}\n\n\tisChanged(value) {\n\t\treturn this._weakValue !== value.has(this._arg1);\n\t}\n\n\tundo(object) {\n\t\tif (this._weakValue && !object.has(this._arg1)) {\n\t\t\tobject.add(this._arg1);\n\t\t} else {\n\t\t\tobject.delete(this._arg1);\n\t\t}\n\t}\n}\n\n","export default function isDiffArrays(clone, value) {\n\treturn clone.length !== value.length || clone.some((item, index) => value[index] !== item);\n}\n","export default function isDiffCertain() {\n\treturn true;\n}\n","export default function isDiffMaps(clone, value) {\n\tif (clone.size !== value.size) {\n\t\treturn true;\n\t}\n\n\tlet bValue;\n\tfor (const [key, aValue] of clone) {\n\t\tbValue = value.get(key);\n\n\t\tif (bValue !== aValue || (bValue === undefined && !value.has(key))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n","export default function isDiffSets(clone, value) {\n\tif (clone.size !== value.size) {\n\t\treturn true;\n\t}\n\n\tfor (const element of clone) {\n\t\tif (!value.has(element)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n","import isDiffCertain from '../diff/is-diff-certain.js';\nimport isDiffArrays from '../diff/is-diff-arrays.js';\nimport {IMMUTABLE_OBJECT_METHODS} from './object.js';\n\nconst IMMUTABLE_ARRAY_METHODS = new Set([\n\t'concat',\n\t'includes',\n\t'indexOf',\n\t'join',\n\t'keys',\n\t'lastIndexOf',\n]);\n\nexport const MUTABLE_ARRAY_METHODS = {\n\tpush: isDiffCertain,\n\tpop: isDiffCertain,\n\tshift: isDiffCertain,\n\tunshift: isDiffCertain,\n\tcopyWithin: isDiffArrays,\n\treverse: isDiffArrays,\n\tsort: isDiffArrays,\n\tsplice: isDiffArrays,\n\tflat: isDiffArrays,\n\tfill: isDiffArrays,\n};\n\nexport const HANDLED_ARRAY_METHODS = new Set([\n\t...IMMUTABLE_OBJECT_METHODS,\n\t...IMMUTABLE_ARRAY_METHODS,\n\t...Object.keys(MUTABLE_ARRAY_METHODS),\n]);\n","import isDiffMaps from '../diff/is-diff-maps.js';\nimport {IMMUTABLE_SET_METHODS, COLLECTION_ITERATOR_METHODS} from './set.js';\n\nconst IMMUTABLE_MAP_METHODS = new Set([...IMMUTABLE_SET_METHODS, 'get']);\n\nexport const MUTABLE_MAP_METHODS = {\n\tset: isDiffMaps,\n\tclear: isDiffMaps,\n\tdelete: isDiffMaps,\n\tforEach: isDiffMaps,\n};\n\nexport const HANDLED_MAP_METHODS = new Set([\n\t...IMMUTABLE_MAP_METHODS,\n\t...Object.keys(MUTABLE_MAP_METHODS),\n\t...COLLECTION_ITERATOR_METHODS,\n]);\n","export const IMMUTABLE_OBJECT_METHODS = new Set([\n\t'hasOwnProperty',\n\t'isPrototypeOf',\n\t'propertyIsEnumerable',\n\t'toLocaleString',\n\t'toString',\n\t'valueOf',\n]);\n","import isDiffSets from '../diff/is-diff-sets.js';\n\nexport const COLLECTION_ITERATOR_METHODS = [\n\t'keys',\n\t'values',\n\t'entries',\n];\n\nexport const IMMUTABLE_SET_METHODS = new Set([\n\t'has',\n\t'toString',\n]);\n\nexport const MUTABLE_SET_METHODS = {\n\tadd: isDiffSets,\n\tclear: isDiffSets,\n\tdelete: isDiffSets,\n\tforEach: isDiffSets,\n};\n\nexport const HANDLED_SET_METHODS = new Set([\n\t...IMMUTABLE_SET_METHODS,\n\t...Object.keys(MUTABLE_SET_METHODS),\n\t...COLLECTION_ITERATOR_METHODS,\n]);\n","import isArray from '../is-array.js';\nimport {isBuiltinWithMutableMethods} from '../is-builtin.js';\nimport isObject from '../is-object.js';\nimport CloneObject from './clone/clone-object.js';\nimport CloneArray from './clone/clone-array.js';\nimport CloneDate from './clone/clone-date.js';\nimport CloneSet from './clone/clone-set.js';\nimport CloneMap from './clone/clone-map.js';\nimport CloneWeakSet from './clone/clone-weakset.js';\nimport CloneWeakMap from './clone/clone-weakmap.js';\n\nexport default class SmartClone {\n\tconstructor(hasOnValidate) {\n\t\tthis._stack = [];\n\t\tthis._hasOnValidate = hasOnValidate;\n\t}\n\n\tstatic isHandledType(value) {\n\t\treturn isObject(value)\n\t\t\t|| isArray(value)\n\t\t\t|| isBuiltinWithMutableMethods(value);\n\t}\n\n\tstatic isHandledMethod(target, name) {\n\t\tif (isObject(target)) {\n\t\t\treturn CloneObject.isHandledMethod(name);\n\t\t}\n\n\t\tif (isArray(target)) {\n\t\t\treturn CloneArray.isHandledMethod(name);\n\t\t}\n\n\t\tif (target instanceof Set) {\n\t\t\treturn CloneSet.isHandledMethod(name);\n\t\t}\n\n\t\tif (target instanceof Map) {\n\t\t\treturn CloneMap.isHandledMethod(name);\n\t\t}\n\n\t\treturn isBuiltinWithMutableMethods(target);\n\t}\n\n\tget isCloning() {\n\t\treturn this._stack.length > 0;\n\t}\n\n\tstart(value, path, argumentsList) {\n\t\tlet CloneClass = CloneObject;\n\n\t\tif (isArray(value)) {\n\t\t\tCloneClass = CloneArray;\n\t\t} else if (value instanceof Date) {\n\t\t\tCloneClass = CloneDate;\n\t\t} else if (value instanceof Set) {\n\t\t\tCloneClass = CloneSet;\n\t\t} else if (value instanceof Map) {\n\t\t\tCloneClass = CloneMap;\n\t\t} else if (value instanceof WeakSet) {\n\t\t\tCloneClass = CloneWeakSet;\n\t\t} else if (value instanceof WeakMap) {\n\t\t\tCloneClass = CloneWeakMap;\n\t\t}\n\n\t\tthis._stack.push(new CloneClass(value, path, argumentsList, this._hasOnValidate));\n\t}\n\n\tupdate(fullPath, property, value) {\n\t\tthis._stack[this._stack.length - 1].update(fullPath, property, value);\n\t}\n\n\tpreferredThisArg(target, thisArg, thisProxyTarget) {\n\t\tconst {name} = target;\n\t\tconst isHandledMethod = SmartClone.isHandledMethod(thisProxyTarget, name);\n\n\t\treturn this._stack[this._stack.length - 1]\n\t\t\t.preferredThisArg(isHandledMethod, name, thisArg, thisProxyTarget);\n\t}\n\n\tisChanged(isMutable, value, equals) {\n\t\treturn this._stack[this._stack.length - 1].isChanged(isMutable, value, equals);\n\t}\n\n\tundo(object) {\n\t\tif (this._previousClone !== undefined) {\n\t\t\tthis._previousClone.undo(object);\n\t\t}\n\t}\n\n\tstop() {\n\t\tthis._previousClone = this._stack.pop();\n\n\t\treturn this._previousClone.clone;\n\t}\n}\n","import {TARGET} from './constants.js';\n\n// eslint-disable-next-line max-params\nexport default function wrapIterator(iterator, target, thisArg, applyPath, prepareValue) {\n\tconst originalNext = iterator.next;\n\n\tif (target.name === 'entries') {\n\t\titerator.next = function () {\n\t\t\tconst result = originalNext.call(this);\n\n\t\t\tif (result.done === false) {\n\t\t\t\tresult.value[0] = prepareValue(\n\t\t\t\t\tresult.value[0],\n\t\t\t\t\ttarget,\n\t\t\t\t\tresult.value[0],\n\t\t\t\t\tapplyPath,\n\t\t\t\t);\n\t\t\t\tresult.value[1] = prepareValue(\n\t\t\t\t\tresult.value[1],\n\t\t\t\t\ttarget,\n\t\t\t\t\tresult.value[0],\n\t\t\t\t\tapplyPath,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t} else if (target.name === 'values') {\n\t\tconst keyIterator = thisArg[TARGET].keys();\n\n\t\titerator.next = function () {\n\t\t\tconst result = originalNext.call(this);\n\n\t\t\tif (result.done === false) {\n\t\t\t\tresult.value = prepareValue(\n\t\t\t\t\tresult.value,\n\t\t\t\t\ttarget,\n\t\t\t\t\tkeyIterator.next().value,\n\t\t\t\t\tapplyPath,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t} else {\n\t\titerator.next = function () {\n\t\t\tconst result = originalNext.call(this);\n\n\t\t\tif (result.done === false) {\n\t\t\t\tresult.value = prepareValue(\n\t\t\t\t\tresult.value,\n\t\t\t\t\ttarget,\n\t\t\t\t\tresult.value,\n\t\t\t\t\tapplyPath,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\treturn iterator;\n}\n"],"names":[],"sourceRoot":""}