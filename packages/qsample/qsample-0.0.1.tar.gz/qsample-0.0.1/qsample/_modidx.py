# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/qsample/',
                'doc_host': 'https://dpwinter.github.io',
                'git_url': 'https://github.com/dpwinter/qsample/tree/master/',
                'lib_path': 'qsample'},
  'syms': { 'qsample.callbacks': { 'qsample.callbacks.Callback': ('callbacks.html#callback', 'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_circuit_begin': ( 'callbacks.html#callback.on_circuit_begin',
                                                                                    'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_circuit_end': ( 'callbacks.html#callback.on_circuit_end',
                                                                                  'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_protocol_begin': ( 'callbacks.html#callback.on_protocol_begin',
                                                                                     'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_protocol_end': ( 'callbacks.html#callback.on_protocol_end',
                                                                                   'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_sampler_begin': ( 'callbacks.html#callback.on_sampler_begin',
                                                                                    'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_sampler_end': ( 'callbacks.html#callback.on_sampler_end',
                                                                                  'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.store': ('callbacks.html#callback.store', 'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList': ('callbacks.html#callbacklist', 'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.__init__': ( 'callbacks.html#callbacklist.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.__iter__': ( 'callbacks.html#callbacklist.__iter__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList._add_default_callbacks': ( 'callbacks.html#callbacklist._add_default_callbacks',
                                                                                              'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_circuit_begin': ( 'callbacks.html#callbacklist.on_circuit_begin',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_circuit_end': ( 'callbacks.html#callbacklist.on_circuit_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_protocol_begin': ( 'callbacks.html#callbacklist.on_protocol_begin',
                                                                                         'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_protocol_end': ( 'callbacks.html#callbacklist.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_sampler_begin': ( 'callbacks.html#callbacklist.on_sampler_begin',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_sampler_end': ( 'callbacks.html#callbacklist.on_sampler_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.ErvPerSample': ('callbacks.html#ervpersample', 'qsample/callbacks.py'),
                                   'qsample.callbacks.ErvPerSample.__init__': ( 'callbacks.html#ervpersample.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.ErvPerSample.on_circuit_end': ( 'callbacks.html#ervpersample.on_circuit_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.ErvPerSample.on_protocol_begin': ( 'callbacks.html#ervpersample.on_protocol_begin',
                                                                                         'qsample/callbacks.py'),
                                   'qsample.callbacks.ErvPerSample.on_protocol_end': ( 'callbacks.html#ervpersample.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.ErvPerSample.on_sampler_end': ( 'callbacks.html#ervpersample.on_sampler_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts': ('callbacks.html#pathproducts', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts.__init__': ( 'callbacks.html#pathproducts.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts.on_sampler_end': ( 'callbacks.html#pathproducts.on_sampler_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts.plot': ('callbacks.html#pathproducts.plot', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotStats': ('callbacks.html#plotstats', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotStats.on_sampler_end': ( 'callbacks.html#plotstats.on_sampler_end',
                                                                                   'qsample/callbacks.py'),
                                   'qsample.callbacks.RelStdTarget': ('callbacks.html#relstdtarget', 'qsample/callbacks.py'),
                                   'qsample.callbacks.RelStdTarget.__init__': ( 'callbacks.html#relstdtarget.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.RelStdTarget.on_protocol_end': ( 'callbacks.html#relstdtarget.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerSample': ('callbacks.html#statspersample', 'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerSample.__init__': ( 'callbacks.html#statspersample.__init__',
                                                                                  'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerSample.on_protocol_end': ( 'callbacks.html#statspersample.on_protocol_end',
                                                                                         'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerSample.on_sampler_end': ( 'callbacks.html#statspersample.on_sampler_end',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.StopSamplingLoop': ('callbacks.html#stopsamplingloop', 'qsample/callbacks.py'),
                                   'qsample.callbacks.StopSamplingLoop.on_protocol_begin': ( 'callbacks.html#stopsamplingloop.on_protocol_begin',
                                                                                             'qsample/callbacks.py'),
                                   'qsample.callbacks.StopSamplingLoop.on_protocol_end': ( 'callbacks.html#stopsamplingloop.on_protocol_end',
                                                                                           'qsample/callbacks.py'),
                                   'qsample.callbacks.StopSamplingLoop.on_sampler_begin': ( 'callbacks.html#stopsamplingloop.on_sampler_begin',
                                                                                            'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates': ('callbacks.html#subsetrates', 'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates.__init__': ( 'callbacks.html#subsetrates.__init__',
                                                                               'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates.on_protocol_end': ( 'callbacks.html#subsetrates.on_protocol_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates.on_sampler_end': ( 'callbacks.html#subsetrates.on_sampler_end',
                                                                                     'qsample/callbacks.py'),
                                   'qsample.callbacks.VerboseCircuitExec': ('callbacks.html#verbosecircuitexec', 'qsample/callbacks.py'),
                                   'qsample.callbacks.VerboseCircuitExec.on_circuit_end': ( 'callbacks.html#verbosecircuitexec.on_circuit_end',
                                                                                            'qsample/callbacks.py')},
            'qsample.circuit': { 'qsample.circuit.Circuit': ('circuit.html#circuit', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__delitem__': ('circuit.html#circuit.__delitem__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__getitem__': ('circuit.html#circuit.__getitem__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__init__': ('circuit.html#circuit.__init__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__len__': ('circuit.html#circuit.__len__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__repr__': ('circuit.html#circuit.__repr__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__setitem__': ('circuit.html#circuit.__setitem__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__str__': ('circuit.html#circuit.__str__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.draw': ('circuit.html#circuit.draw', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.insert': ('circuit.html#circuit.insert', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.n_qubits': ('circuit.html#circuit.n_qubits', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.n_ticks': ('circuit.html#circuit.n_ticks', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.qubits': ('circuit.html#circuit.qubits', 'qsample/circuit.py'),
                                 'qsample.circuit.unpack': ('circuit.html#unpack', 'qsample/circuit.py')},
            'qsample.examples': { 'qsample.examples.gen_flagstab': ('examples.html#gen_flagstab', 'qsample/examples.py'),
                                  'qsample.examples.gen_ftsteane': ('examples.html#gen_ftsteane', 'qsample/examples.py'),
                                  'qsample.examples.gen_ghz1': ('examples.html#gen_ghz1', 'qsample/examples.py'),
                                  'qsample.examples.gen_ghz3': ('examples.html#gen_ghz3', 'qsample/examples.py'),
                                  'qsample.examples.gen_ghz_stab': ('examples.html#gen_ghz_stab', 'qsample/examples.py'),
                                  'qsample.examples.gen_steane0': ('examples.html#gen_steane0', 'qsample/examples.py')},
            'qsample.math': { 'qsample.math.Wald_var': ('math.html#wald_var', 'qsample/math.py'),
                              'qsample.math.Wilson_var': ('math.html#wilson_var', 'qsample/math.py'),
                              'qsample.math.binom': ('math.html#binom', 'qsample/math.py'),
                              'qsample.math.comb': ('math.html#comb', 'qsample/math.py')},
            'qsample.noise': { 'qsample.noise.E0': ('noise.html#e0', 'qsample/noise.py'),
                               'qsample.noise.E0.group': ('noise.html#e0.group', 'qsample/noise.py'),
                               'qsample.noise.E0.run': ('noise.html#e0.run', 'qsample/noise.py'),
                               'qsample.noise.E1': ('noise.html#e1', 'qsample/noise.py'),
                               'qsample.noise.E1.generate': ('noise.html#e1.generate', 'qsample/noise.py'),
                               'qsample.noise.E1.group': ('noise.html#e1.group', 'qsample/noise.py'),
                               'qsample.noise.E2': ('noise.html#e2', 'qsample/noise.py'),
                               'qsample.noise.E2.generate': ('noise.html#e2.generate', 'qsample/noise.py'),
                               'qsample.noise.E2.group': ('noise.html#e2.group', 'qsample/noise.py'),
                               'qsample.noise.E3': ('noise.html#e3', 'qsample/noise.py'),
                               'qsample.noise.E3.generate': ('noise.html#e3.generate', 'qsample/noise.py'),
                               'qsample.noise.E3.group': ('noise.html#e3.group', 'qsample/noise.py'),
                               'qsample.noise.E3_1': ('noise.html#e3_1', 'qsample/noise.py'),
                               'qsample.noise.E3_1.generate': ('noise.html#e3_1.generate', 'qsample/noise.py'),
                               'qsample.noise.E3_1.group': ('noise.html#e3_1.group', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel': ('noise.html#errormodel', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.choose_p': ('noise.html#errormodel.choose_p', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.choose_w': ('noise.html#errormodel.choose_w', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.generate': ('noise.html#errormodel.generate', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.group': ('noise.html#errormodel.group', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.run': ('noise.html#errormodel.run', 'qsample/noise.py'),
                               'qsample.noise.InnsbruckTrap': ('noise.html#innsbrucktrap', 'qsample/noise.py'),
                               'qsample.noise.InnsbruckTrap.generate': ('noise.html#innsbrucktrap.generate', 'qsample/noise.py'),
                               'qsample.noise.InnsbruckTrap.group': ('noise.html#innsbrucktrap.group', 'qsample/noise.py')},
            'qsample.protocol': { 'qsample.protocol.Protocol': ('protocol.html#protocol', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.__init__': ('protocol.html#protocol.__init__', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.__iter__': ('protocol.html#protocol.__iter__', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.add_edge': ('protocol.html#protocol.add_edge', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.add_node': ('protocol.html#protocol.add_node', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.add_nodes_from': ( 'protocol.html#protocol.add_nodes_from',
                                                                                'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.checks': ('protocol.html#protocol.checks', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.draw': ('protocol.html#protocol.draw', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.load': ('protocol.html#protocol.load', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.n_qubits': ('protocol.html#protocol.n_qubits', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.partition': ('protocol.html#protocol.partition', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.save': ('protocol.html#protocol.save', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.send': ('protocol.html#protocol.send', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.update_node': ('protocol.html#protocol.update_node', 'qsample/protocol.py')},
            'qsample.sampler.base': { 'qsample.sampler.base.Sampler': ('sampler.base.html#sampler', 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.Sampler.__init__': ( 'sampler.base.html#sampler.__init__',
                                                                                 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.Sampler.load': ('sampler.base.html#sampler.load', 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.Sampler.optimize': ( 'sampler.base.html#sampler.optimize',
                                                                                 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.Sampler.run': ('sampler.base.html#sampler.run', 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.Sampler.save': ('sampler.base.html#sampler.save', 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.all_subsets': ('sampler.base.html#all_subsets', 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.err_probs_tomatrix': ( 'sampler.base.html#err_probs_tomatrix',
                                                                                   'qsample/sampler/base.py'),
                                      'qsample.sampler.base.protocol_all_subsets': ( 'sampler.base.html#protocol_all_subsets',
                                                                                     'qsample/sampler/base.py'),
                                      'qsample.sampler.base.protocol_subset_occurence': ( 'sampler.base.html#protocol_subset_occurence',
                                                                                          'qsample/sampler/base.py'),
                                      'qsample.sampler.base.sort_by_list': ('sampler.base.html#sort_by_list', 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.subset_occurence': ( 'sampler.base.html#subset_occurence',
                                                                                 'qsample/sampler/base.py'),
                                      'qsample.sampler.base.tomatrix': ('sampler.base.html#tomatrix', 'qsample/sampler/base.py')},
            'qsample.sampler.direct': { 'qsample.sampler.direct.DirectSampler': ( 'sampler.direct.html#directsampler',
                                                                                  'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.__init__': ( 'sampler.direct.html#directsampler.__init__',
                                                                                           'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.optimize': ( 'sampler.direct.html#directsampler.optimize',
                                                                                           'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.stats': ( 'sampler.direct.html#directsampler.stats',
                                                                                        'qsample/sampler/direct.py')},
            'qsample.sampler.subset': { 'qsample.sampler.subset.SubsetSampler': ( 'sampler.subset.html#subsetsampler',
                                                                                  'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.__init__': ( 'sampler.subset.html#subsetsampler.__init__',
                                                                                           'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.optimize': ( 'sampler.subset.html#subsetsampler.optimize',
                                                                                           'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.stats': ( 'sampler.subset.html#subsetsampler.stats',
                                                                                        'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.tree': ( 'sampler.subset.html#subsetsampler.tree',
                                                                                       'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSamplerERV': ( 'sampler.subset.html#subsetsamplererv',
                                                                                     'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSamplerERV.ERV': ( 'sampler.subset.html#subsetsamplererv.erv',
                                                                                         'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSamplerERV.optimize': ( 'sampler.subset.html#subsetsamplererv.optimize',
                                                                                              'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSamplerERV.wplus1': ( 'sampler.subset.html#subsetsamplererv.wplus1',
                                                                                            'qsample/sampler/subset.py')},
            'qsample.sampler.tree': { 'qsample.sampler.tree.Constant': ('sampler.tree.html#constant', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Constant.__init__': ( 'sampler.tree.html#constant.__init__',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Constant.__str__': ( 'sampler.tree.html#constant.__str__',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Constant.variance': ( 'sampler.tree.html#constant.variance',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree': ('sampler.tree.html#counttree', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.__import': ( 'sampler.tree.html#counttree.__import',
                                                                                   'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.__init__': ( 'sampler.tree.html#counttree.__init__',
                                                                                   'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.__str__': ( 'sampler.tree.html#counttree.__str__',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree._iter_node_attr': ( 'sampler.tree.html#counttree._iter_node_attr',
                                                                                          'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.add': ('sampler.tree.html#counttree.add', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.delta': ( 'sampler.tree.html#counttree.delta',
                                                                                'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.detach': ( 'sampler.tree.html#counttree.detach',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.direct_rate': ( 'sampler.tree.html#counttree.direct_rate',
                                                                                      'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.direct_variance': ( 'sampler.tree.html#counttree.direct_variance',
                                                                                          'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.draw': ( 'sampler.tree.html#counttree.draw',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.from_dict': ( 'sampler.tree.html#counttree.from_dict',
                                                                                    'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.is_invariant_path': ( 'sampler.tree.html#counttree.is_invariant_path',
                                                                                            'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.load': ( 'sampler.tree.html#counttree.load',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.multiplier': ( 'sampler.tree.html#counttree.multiplier',
                                                                                     'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.norm': ( 'sampler.tree.html#counttree.norm',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.partial_variance': ( 'sampler.tree.html#counttree.partial_variance',
                                                                                           'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.rate': ( 'sampler.tree.html#counttree.rate',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.save': ( 'sampler.tree.html#counttree.save',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.subtree': ( 'sampler.tree.html#counttree.subtree',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.subtreediff': ( 'sampler.tree.html#counttree.subtreediff',
                                                                                      'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.to_dict': ( 'sampler.tree.html#counttree.to_dict',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.twig': ( 'sampler.tree.html#counttree.twig',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.variance': ( 'sampler.tree.html#counttree.variance',
                                                                                   'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.CountTree.variance_ub': ( 'sampler.tree.html#counttree.variance_ub',
                                                                                      'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Node': ('sampler.tree.html#node', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Node.__init__': ('sampler.tree.html#node.__init__', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable': ('sampler.tree.html#variable', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.__init__': ( 'sampler.tree.html#variable.__init__',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.__str__': ( 'sampler.tree.html#variable.__str__',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.rate': ('sampler.tree.html#variable.rate', 'qsample/sampler/tree.py')},
            'qsample.sim.mixin': { 'qsample.sim.mixin.CircuitRunnerMixin': ('sim.mixin.html#circuitrunnermixin', 'qsample/sim/mixin.py'),
                                   'qsample.sim.mixin.CircuitRunnerMixin._apply_gate': ( 'sim.mixin.html#circuitrunnermixin._apply_gate',
                                                                                         'qsample/sim/mixin.py'),
                                   'qsample.sim.mixin.CircuitRunnerMixin.run': ( 'sim.mixin.html#circuitrunnermixin.run',
                                                                                 'qsample/sim/mixin.py')},
            'qsample.sim.stabilizer': { 'qsample.sim.stabilizer.StabilizerSimulator': ( 'sim.stabilizer.html#stabilizersimulator',
                                                                                        'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.CNOT': ( 'sim.stabilizer.html#stabilizersimulator.cnot',
                                                                                             'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.H': ( 'sim.stabilizer.html#stabilizersimulator.h',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.I': ( 'sim.stabilizer.html#stabilizersimulator.i',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.MSd': ( 'sim.stabilizer.html#stabilizersimulator.msd',
                                                                                            'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Q': ( 'sim.stabilizer.html#stabilizersimulator.q',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Qd': ( 'sim.stabilizer.html#stabilizersimulator.qd',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.R': ( 'sim.stabilizer.html#stabilizersimulator.r',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Rd': ( 'sim.stabilizer.html#stabilizersimulator.rd',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.S': ( 'sim.stabilizer.html#stabilizersimulator.s',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Sd': ( 'sim.stabilizer.html#stabilizersimulator.sd',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.X': ( 'sim.stabilizer.html#stabilizersimulator.x',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Y': ( 'sim.stabilizer.html#stabilizersimulator.y',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Z': ( 'sim.stabilizer.html#stabilizersimulator.z',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.init': ( 'sim.stabilizer.html#stabilizersimulator.init',
                                                                                             'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.measure': ( 'sim.stabilizer.html#stabilizersimulator.measure',
                                                                                                'qsample/sim/stabilizer.py')},
            'qsample.sim.statevector': { 'qsample.sim.statevector.MeasureResult': ( 'sim.statevector.html#measureresult',
                                                                                    'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.MeasureResult.__bool__': ( 'sim.statevector.html#measureresult.__bool__',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.MeasureResult.__init__': ( 'sim.statevector.html#measureresult.__init__',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator': ( 'sim.statevector.html#statevectorsimulator',
                                                                                           'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.CNOT': ( 'sim.statevector.html#statevectorsimulator.cnot',
                                                                                                'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.H': ( 'sim.statevector.html#statevectorsimulator.h',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.I': ( 'sim.statevector.html#statevectorsimulator.i',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.MSd': ( 'sim.statevector.html#statevectorsimulator.msd',
                                                                                               'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Q': ( 'sim.statevector.html#statevectorsimulator.q',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Qd': ( 'sim.statevector.html#statevectorsimulator.qd',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.R': ( 'sim.statevector.html#statevectorsimulator.r',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Rd': ( 'sim.statevector.html#statevectorsimulator.rd',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Rx': ( 'sim.statevector.html#statevectorsimulator.rx',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Ry': ( 'sim.statevector.html#statevectorsimulator.ry',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Rz': ( 'sim.statevector.html#statevectorsimulator.rz',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.S': ( 'sim.statevector.html#statevectorsimulator.s',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Sd': ( 'sim.statevector.html#statevectorsimulator.sd',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.T': ( 'sim.statevector.html#statevectorsimulator.t',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Td': ( 'sim.statevector.html#statevectorsimulator.td',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.X': ( 'sim.statevector.html#statevectorsimulator.x',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Y': ( 'sim.statevector.html#statevectorsimulator.y',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Z': ( 'sim.statevector.html#statevectorsimulator.z',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.__del__': ( 'sim.statevector.html#statevectorsimulator.__del__',
                                                                                                   'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.__init__': ( 'sim.statevector.html#statevectorsimulator.__init__',
                                                                                                    'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.expectation': ( 'sim.statevector.html#statevectorsimulator.expectation',
                                                                                                       'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.init': ( 'sim.statevector.html#statevectorsimulator.init',
                                                                                                'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.measure': ( 'sim.statevector.html#statevectorsimulator.measure',
                                                                                                   'qsample/sim/statevector.py')}}}
