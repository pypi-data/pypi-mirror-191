# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['concave_uhull']

package_data = \
{'': ['*']}

install_requires = \
['numpy>=1.24.1,<2.0.0', 'scipy>=1.10.0,<2.0.0']

setup_kwargs = {
    'name': 'concave-uhull',
    'version': '0.2.3',
    'description': 'A simple (but not simpler) algorithm for concave hull of 2D point sets using an alpha shape algorithm.',
    'long_description': "Concave uhull\\*\n===============\n\nA simple (but not simpler) algorithm for concave hull of 2D point sets\nusing an alpha shape algorithm.\n\nNote\n----\n\n> -   uhull! (Brazil) yeah! (expresses joy or celebration)\n\n![image](data/img/uhull_homer.jpg)\n\n### Installation\n\n``` {.bash}\npip install concave_uhull\n```\n\n### Quickstart\n\nConcave hull for 2D points\n--------------------------\n\nSuppose we want to find a concave hull for the following set of points:\n\n![image](data/img/set_of_points.png)\n\nWe can find the `polygons` that form the concave hull of the set as\nfollows:\n\n``` {.python}\nfrom concave_uhull.alpha_shape import get_alpha_shape_polygons\n\npoints = [\n    (0.0, 0.0),\n    (0.0, 1.0),\n    (1.0, 1.0),\n    (1.0, 0.0),\n    (0.5, 0.25),\n    (0.5, 0.75),\n    (0.25, 0.5),\n    (0.75, 0.5),\n]\npolygons = get_alpha_shape_polygons(coordinates_points=points)\n```\n\nThe concave hull obtained for these points is formed by a single polygon\nas follows:\n\n![image](data/img/concave_hull_points_set.png)\n\nNote\n----\n\nTwo parameters influence the concavity of the concave hull polygons: a\nnon-negative numerical value `alpha` and the function to measure the\n`distance` between the 2D points. By default alpha is set to `1.5` and\nthe function to measure distance is\n[Haversine](https://en.wikipedia.org/wiki/Haversine_formula). The length\nof the edges of the polygons generated by the algorithm is calculated\nusing the informed `distance` function. The `alpha` parameter defines\nthe size of the range of acceptable values for the length of these edges\nthat we must consider in the algorithm. Thus, larger alpha considers\nlarger edges in the algorithm, resulting in a smaller number of polygons\nto represent the concave hull and consequently we obtain a less concave\n(or, more convex) hull.\n\nAs an example, notice that by doubling the default value of alpha, we\nget the convex hull:\n\n``` {.python}\nfrom concave_uhull.alpha_shape import get_alpha_shape_polygons\n\npoints = [\n    (0.0, 0.0),\n    (0.0, 1.0),\n    (1.0, 1.0),\n    (1.0, 0.0),\n    (0.5, 0.25),\n    (0.5, 0.75),\n    (0.25, 0.5),\n    (0.75, 0.5),\n]\npolygons = get_alpha_shape_polygons(coordinates_points=points, alpha=2 * 1.5)\n```\n\n![image](data/img/concave_hull_doubling_default_alpha_value.png)\n\nAs another example let\\'s define a distance function and get concave\nhull with it.\n\n``` {.python}\nfrom concave_uhull.alpha_shape import get_alpha_shape_polygons\n\n\ndef manhattan_distance(coord1, coord2):\n    return abs(coord1[0] - coord2[0]) + abs(coord1[1] - coord2[1])\n\n\npoints = [\n    (0.0, 0.0),\n    (0.0, 1.0),\n    (1.0, 1.0),\n    (1.0, 0.0),\n    (0.5, 0.25),\n    (0.5, 0.75),\n    (0.25, 0.5),\n    (0.75, 0.5),\n]\npolygons = get_alpha_shape_polygons(\n    coordinates_points=points, distance=manhattan_distance\n)\n```\n\n![image](data/img/concave_hull_with_manhattan_distance.png)\n\n-   You can find code to generate quickstart images\n    [here](data/ipynb/quickstart.ipynb).\n\nConcave hull for geographic coordinate points\n---------------------------------------------\n\n-   [Interactive map of points in Brasília, Brazil](data/maps/points_brasilia_brazil.html)\n\n![image](data/img/points_brasilia_brazil.png)\n\n-   [Interactive map of points in Pará, Brazil](data/img/points_para_brazil.png)\n\n![image](data/img/points_para_brazil.png)\n\n-   [Interactive map of points in Rio de Janeiro, Brazil](data/maps/points_rio_de_janeiro_brazil.html)\n\n![image](data/img/points_rio_de_janeiro_brazil.png)\n\n-   You can find the code to generate the interactive maps\n    [here](data/ipynb/concave_hull_geographic_coordinates.ipynb).\n",
    'author': 'Luan',
    'author_email': 'llvdmoraes@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://luanleonardo.github.io/concave_uhull/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8.1,<3.12',
}


setup(**setup_kwargs)
