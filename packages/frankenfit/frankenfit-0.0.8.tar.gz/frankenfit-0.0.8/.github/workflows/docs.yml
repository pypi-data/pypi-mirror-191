name: docs

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**"  # for docstrings
      - "docs/**"
      - "pyproject.toml"
      - "tox.ini"
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/**"  # for docstrings
      - "docs/**"
      - "pyproject.toml"
      - "tox.ini"
  workflow_dispatch:

jobs:
  install_deps:
    runs-on: ubuntu-22.04
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: ${{ !env.ACT }}
        with:
          packages: graphviz
          version: 1.0

  docs:
    runs-on: ubuntu-22.04
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: ${{ !env.ACT }}
        with:
          packages: graphviz
          version: 1.0
      - name: Ensure dot config
        if: ${{ !env.ACT }}
        run: sudo dot -c
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ vars.PY_VER_BUILD_TEST || '3.10' }}
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            docs/_config.yml
      - name: Upgrade pip and install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install "tox < 4"
      - name: jupyter-book
        run: tox -e docs
      - name: cat-logs-on-failure
        if: failure()
        run: cat docs/_build/html/reports/*.log
      - name: upload-logs-on-failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: frankenfit-docs-html-reports
          path: docs/_build/html/reports/
      - name: upload-artifact
        uses: actions/upload-artifact@v3
        if: ${{ !env.ACT }}
        with:
          name: frankenfit-docs-html
          path: docs/_build/html/
      - name: deploy-current-docs
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          destination_dir: current
          commit_message: |
            Deploy current docs: ${{ github.event.head_commit.message }}
