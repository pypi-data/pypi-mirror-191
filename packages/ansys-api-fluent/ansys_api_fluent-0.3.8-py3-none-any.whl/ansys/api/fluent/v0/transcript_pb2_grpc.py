# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ansys.api.fluent.v0 import transcript_pb2 as ansys_dot_api_dot_fluent_dot_v0_dot_transcript__pb2


class TranscriptStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BeginStreaming = channel.unary_stream(
        '/grpcRemoting.Transcript/BeginStreaming',
        request_serializer=ansys_dot_api_dot_fluent_dot_v0_dot_transcript__pb2.TranscriptRequest.SerializeToString,
        response_deserializer=ansys_dot_api_dot_fluent_dot_v0_dot_transcript__pb2.TranscriptResponse.FromString,
        )


class TranscriptServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def BeginStreaming(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TranscriptServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BeginStreaming': grpc.unary_stream_rpc_method_handler(
          servicer.BeginStreaming,
          request_deserializer=ansys_dot_api_dot_fluent_dot_v0_dot_transcript__pb2.TranscriptRequest.FromString,
          response_serializer=ansys_dot_api_dot_fluent_dot_v0_dot_transcript__pb2.TranscriptResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpcRemoting.Transcript', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
