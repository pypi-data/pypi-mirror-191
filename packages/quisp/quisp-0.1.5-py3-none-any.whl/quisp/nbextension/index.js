define(["@jupyter-widgets/base"],(e=>(()=>{var n={889:(e,n,t)=>{(n=t(352)(!1)).push([e.id,".custom-widget {\n  background-color: lightseagreen;\n  padding: 0px 2px;\n}\n",""]),e.exports=n},352:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t,r,i,o=e[1]||"",a=e[3];if(!a)return o;if(n&&"function"==typeof btoa){var s=(t=a,r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),"/*# ".concat(i," */")),l=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[o].concat(l).concat([s]).join("\n")}return[o].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),n.push(l))}},n}},204:(e,n,t)=>{var r=t(379),i=t(889);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.id,i,""]]);r(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},379:(e,n,t)=>{"use strict";var r,i=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),o=[];function a(e){for(var n=-1,t=0;t<o.length;t++)if(o[t].identifier===e){n=t;break}return n}function s(e,n){for(var t={},r=[],i=0;i<e.length;i++){var s=e[i],l=n.base?s[0]+n.base:s[0],c=t[l]||0,u="".concat(l," ").concat(c);t[l]=c+1;var d=a(u),m={css:s[1],media:s[2],sourceMap:s[3]};-1!==d?(o[d].references++,o[d].updater(m)):o.push({identifier:u,updater:f(m,n),references:1}),r.push(u)}return r}function l(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}return n}var c,u=(c=[],function(e,n){return c[e]=n,c.filter(Boolean).join("\n")});function d(e,n,t,r){var i=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(n,i);else{var o=document.createTextNode(i),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(o,a[n]):e.appendChild(o)}}function m(e,n,t){var r=t.css,i=t.media,o=t.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,_=0;function f(e,n){var t,r,i;if(n.singleton){var o=_++;t=p||(p=l(n)),r=d.bind(null,t,o,!1),i=d.bind(null,t,o,!0)}else t=l(n),r=m.bind(null,t,n),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else i()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=s(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var i=a(t[r]);o[i].references--}for(var l=s(e,n),c=0;c<t.length;c++){var u=a(t[c]);0===o[u].references&&(o[u].updater(),o.splice(u,1))}t=l}}}},112:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),window.__webpack_public_path__=document.querySelector("body").getAttribute("data-base-url")+"nbextensions/quisp",i(t(607),n)},892:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateSource=void 0,n.generateSource=(e,n,t,r="",i='\n[General]\nseed-set = \\${runnumber}\nsim-time-limit = 100s\n# Qnic\n#**.buffers = intuniform(7,7)\nimage-path = "./quisp/images"\n#**.logger.log_filename = "\\${resultdir}/\\${configname}-\\${runnumber}.jsonl"\n**.logger.log_filename = "/result.jsonl"\n**.tomography_output_filename = "/result.output"\n\n**.h_gate_error_rate = 1/2000\n**.h_gate_x_error_ratio = 0\n**.h_gate_y_error_ratio = 0\n**.h_gate_z_error_ratio = 0\n\n**.Measurement_error_rate = 1/2000\n**.Measurement_x_error_ratio = 1\n**.Measurement_y_error_ratio = 1\n**.Measurement_z_error_ratio = 1\n\n**.x_gate_error_rate = 1/2000\n**.x_gate_x_error_ratio = 0\n**.x_gate_y_error_ratio = 0\n**.x_gate_z_error_ratio = 0\n\n**.z_gate_error_rate = 1/2000\n**.z_gate_x_error_ratio = 0\n**.z_gate_y_error_ratio = 0\n**.z_gate_z_error_ratio = 0\n\n\n#Error on Target, Error on Controlled\n**.cnot_gate_error_rate = 1/2000\n**.cnot_gate_iz_error_ratio = 1 #checked\n**.cnot_gate_zi_error_ratio = 1 #checked\n**.cnot_gate_zz_error_ratio = 1 #checked\n**.cnot_gate_ix_error_ratio = 1 #checked\n**.cnot_gate_xi_error_ratio = 1 #checked\n**.cnot_gate_xx_error_ratio = 1 #checked\n**.cnot_gate_iy_error_ratio = 1 #checked\n**.cnot_gate_yi_error_ratio = 1 #checked\n**.cnot_gate_yy_error_ratio = 1 #checked\n\n\n**.memory_x_error_rate = 1.11111111e-7\n**.memory_y_error_rate = 1.11111111e-7\n**.memory_z_error_rate = 1.11111111e-7\n**.memory_energy_excitation_rate = 0.000198\n**.memory_energy_relaxation_rate = 0.00000198\n**.memory_completely_mixed_rate = 0\n\n# when to start the BSA timing notification.\n**.initial_notification_timing_buffer = 10 s\n**.TrafficPattern = 1\n**.LoneInitiatorAddress = 1\n\n\n\n[Config Custom]\nnetwork = networks.Realistic_Layer2_Simple_MIM_MM_10km\nseed-set = 0\n**.number_of_bellpair = 7000\n**.buffers = 100\n\n\n\n**.emission_success_probability = 0.46*0.49\n\n# Error on optical qubit in a channel\n**.channel_loss_rate = 0.04500741397 # per km. 1 - 10^(-0.2/10)\n**.channel_x_error_rate = 0.01\n**.channel_z_error_rate = 0.01\n**.channel_y_error_rate = 0.01\n\n# Internal HOM in QNIC\n**.internal_hom_loss_rate = 0\n**.internal_hom_error_rate = 0 #Not inplemented\n**.internal_hom_required_precision = 1.5e-9 #Schuck et al., PRL 96,\n**.internal_hom_photon_detection_per_sec = 1000000000\n**.internal_hom_darkcount_probability = 10e-8 #10/s * 10^-9\n\n#Stand-alone HOM in the network\n**.hom_loss_rate = 0\n**.hom_error_rate = 0 #Not inplemented\n**.hom_required_precision = 1.5e-9 #Schuck et al., PRL 96,\n**.hom_photon_detection_per_sec = 1000000000\n**.hom_darkcount_probability = 10e-8 #1%\n\n**.link_tomography = false\n**.EndToEndConnection = true\n**.initial_purification = 2\n**.purification_type = 1001')=>`\n      window.qtenvSkipRunSelection = true;\n      const nedContent = \`${r}\`;\n      const iniContent = \`${i}\`;\n      const canvas = document.getElementById("main");\n      canvas.style.width = '100%';\n      canvas.style.height = '100%';\n      canvas.oncontextmenu = (event) => {\n        event.preventDefault();\n      };\n      canvas.contentEditable = 'true';\n      console.log("hello world");\n      Promise.all([loadWasm(), loadEmscriptenModule(), loadPackageData()])\n      .then(([wasmModule, emscriptenSource, packageData]) => {\n        console.log(wasmModule);\n        window.Module = {\n          instantiateWasm: (imports, callback) => {\n            console.log('instantiate!');\n            WebAssembly.instantiate(wasmModule, imports).then((instance) =>\n              callback(instance, wasmModule)\n            );\n            return {};\n          },\n          localteFile: (filename) => {\n            console.log('locateFile:', filename);\n            return filename;\n          },\n          print: (msg) => console.log(msg),\n          printErr: (msg) => console.error(msg),\n          onAbort: (msg) => console.error('abort: ', msg),\n          quit: (code, exception) => console.error('quit: ', { code, exception }),\n          mainScriptUrlOrBlob: new Blob([emscriptenSource], { type: 'text/javascript' }),\n          qtCanvasElements: [canvas],\n          getPreloadedPackage: (_packageName, _packageSize) => packageData,\n          setStatus: (msg) => {\n            console.log('status changed: ', msg);\n          },\n          monitorRunDependencies: () => {},\n          preRun: [\n            () => {\n              console.log(FS.readdir('/networks'));\n              if (nedContent) FS.writeFile('/networks/custom.ned', nedContent);\n              if (iniContent) FS.writeFile('/networks/omnetpp.ini', iniContent);\n            },\n          ],\n        };\n        window.qtenvReady = false;\n        const timer = setInterval(() => {\n          if (window.qtenvReady) {\n            clearInterval(timer);\n            console.log(this);\n            window.qtenv = window.Module.getQtenv();\n            window.mainWindow = window.qtenv.getMainWindow();\n            console.log('qtenv ready');\n          }\n        }, 100);\n        const args = [\n          '-m', /* merge stderr into stdout */\n          '-u', 'Qtenv',  /* ui */\n          '-n', './networks:./channels:./modules', /* .ned file search path */\n          '-f', './networks/omnetpp.ini', /* config file */\n          '-c', 'Custom',\n          '-r', '0',\n          '--image-path=/quisp/images',\n        ];\n        console.log(JSON.stringify(args));\n\n        self.eval(\n          emscriptenSource.substring(\n            emscriptenSource.lastIndexOf('arguments_=['),\n            -1\n          ) +\n            'arguments_=' +\n            JSON.stringify(args) +\n            ';'\n        );\n      })\n      function loadWasm() {\n        const resp = fetch("${e}");\n        if (typeof WebAssembly.compileStreaming !== 'undefined') {\n          return WebAssembly.compileStreaming(resp);\n        } else {\n          return resp.then((r) => r.arrayBuffer()).then(WebAssembly.compile);\n        }\n      }\n\n      function loadEmscriptenModule() {\n        return fetch("${n}").then((r) => r.text());\n      }\n\n      function loadPackageData() {\n        return fetch("${t}").then((r) => r.arrayBuffer());\n      }\n      function readFile(filename) {\n        try {\n          return FS.readFile(filename, { encoding: 'utf8' });\n        } catch {\n          return null;\n        }\n      };\n      window.addEventListener("message", (e) => {\n        console.log("iframe handle message: ", e);\n        if (e.data && e.data.command === "readFile") {\n          const f = readFile(e.data.args.filename)\n          e.source.postMessage({command: "readFile", result: f});\n        }\n      });\n    `},607:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),i(t(412),n),i(t(891),n)},412:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.MODULE_NAME=n.MODULE_VERSION=void 0;const r=t(147);n.MODULE_VERSION=r.version,n.MODULE_NAME=r.name},891:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(i,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}l((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.QuispIFrameView=n.QuispIFrameModel=void 0;const i=t(146),o=t(412),a=t(892);t(204);const s="https://aqua.sfc.wide.ad.jp/quisp-online/jupyter-quisp-widget/",l=s+"quisp.wasm",c=s+"quisp.js",u=s+"quisp.data",d=(e,n)=>new Promise(((t,r)=>{try{e.postMessage({command:"readFile",args:{filename:n}});const r=e=>{console.log("widget receive message",e),window.removeEventListener("message",r),t(e.data.result)};window.addEventListener("message",r)}catch(e){console.error(e),r(e)}}));class m extends i.DOMWidgetModel{constructor(e,n){super(e,n),this.iframe=document.createElement("IFRAME"),this.currentViewId=null,this.on("msg:custom",this.handleMessages,this)}defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:m.model_name,_model_module:m.model_module,_model_module_version:m.model_module_version,_view_name:m.view_name,_view_module:m.view_module,_view_module_version:m.view_module_version,value:"Hello World",iniContent:void 0,nedContent:void 0})}useIframe(e){return null===this.currentViewId&&(this.setupIframe(),this.currentViewId=e),this.currentViewId===e?this.iframe:null}reset(){this.iframe=document.createElement("IFRAME"),this.setupIframe()}setupIframe(){const e=this.get("nedContent"),n=this.get("iniContent"),t=a.generateSource(l,c,u,e,n);this.iframe.srcdoc=`<canvas id="main"><script>${t}<\/script>`,this.iframe.style.width="100%",this.iframe.style.height="897px"}handleMessages(e){return r(this,void 0,void 0,(function*(){console.log("handle custome message: ",e,this);const n=this.iframe.contentWindow.Module.getQtenv().getMainWindow(),t=this.iframe.contentWindow.Module.RunMode;switch(e.msg){case"runNormal":n.runSimulation(t.NORMAL);break;case"runStep":n.runSimulation(t.STEP);break;case"runFast":n.runSimulation(t.FAST);break;case"stop":n.stopSimulation();break;case"load":console.log("loading...."),this.set("iniContent",e.ini),this.set("nedContent",e.ned),this.setupIframe();break;case"readResult":this.iframe.contentWindow.FS;const r=yield d(this.iframe.contentWindow,"/result.jsonl"),i=yield d(this.iframe.contentWindow,"/result.output");this.send({jsonl:r,output:i},(e=>console.log("model load callback",e)))}}))}}n.QuispIFrameModel=m,m.serializers=Object.assign({},i.DOMWidgetModel.serializers),m.model_name="QuispIFrameModel",m.model_module=o.MODULE_NAME,m.model_module_version=o.MODULE_VERSION,m.view_name="QuispIFrameView",m.view_module=o.MODULE_NAME,m.view_module_version=o.MODULE_VERSION;class p extends i.DOMWidgetView{initialize(){}render(){if(this.el.classList.add("custom-widget"),0==this.el.children.length){const e=this.model.useIframe(this.cid);e?(this.el.appendChild(e),this.model.send({state_change:"rendered"},(()=>{}))):this.el.textContent="see other view"}}}n.QuispIFrameView=p},146:n=>{"use strict";n.exports=e},147:e=>{"use strict";e.exports=JSON.parse('{"name":"quisp","version":"0.1.5","description":"A Custom Jupyter Widget Library","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"files":["lib/**/*.js","dist/*.js","css/*.css"],"homepage":"https://github.com/sfc-aqua/quisp.py","bugs":{"url":"https://github.com/sfc-aqua/quisp.py/issues"},"license":"BSD-3-Clause","author":{"name":"zigen","email":"hrlclb@gmail.com"},"main":"lib/index.js","types":"./lib/index.d.ts","repository":{"type":"git","url":"https://github.com/sfc-aqua/quisp.py"},"scripts":{"build":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension:dev","build:prod":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack","clean":"yarn run clean:lib && yarn run clean:nbextension && yarn run clean:labextension","clean:lib":"rimraf lib","clean:labextension":"rimraf quisp/labextension","clean:nbextension":"rimraf quisp/nbextension/static/index.js","lint":"eslint . --ext .ts,.tsx --fix","lint:check":"eslint . --ext .ts,.tsx","prepack":"yarn run build:lib","test":"jest","watch":"npm-run-all -p watch:*","watch:lib":"tsc -w","watch:nbextension":"webpack --watch --mode=development","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyter-widgets/base":"^1.1.10 || ^2 || ^3 || ^4 || ^5 || ^6"},"devDependencies":{"@babel/core":"^7.5.0","@babel/preset-env":"^7.5.0","@jupyter-widgets/base-manager":"^1.0.2","@jupyterlab/builder":"^3.0.0","@lumino/application":"^1.6.0","@lumino/widgets":"^1.6.0","@types/jest":"^26.0.0","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^3.6.0","@typescript-eslint/parser":"^3.6.0","acorn":"^7.2.0","css-loader":"^3.2.0","eslint":"^7.4.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","fs-extra":"^7.0.0","identity-obj-proxy":"^3.0.0","jest":"^26.0.0","mkdirp":"^0.5.1","npm-run-all":"^4.1.3","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^1.1.3","style-loader":"^1.0.0","ts-jest":"^26.0.0","ts-loader":"^8.0.0","typescript":"~4.1.3","webpack":"^5.61.0","webpack-cli":"^4.0.0"},"jupyterlab":{"extension":"lib/plugin","outputDir":"quisp/labextension/","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}}}}')}},t={};function r(e){var i=t[e];if(void 0!==i)return i.exports;var o=t[e]={id:e,exports:{}};return n[e].call(o.exports,o,o.exports,r),o.exports}return r.nc=void 0,r(112)})()));
//# sourceMappingURL=index.js.map